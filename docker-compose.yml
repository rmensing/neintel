version: '3.8'

services:
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    networks:
      net:
        aliases: []
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/robm/.portainer:/data
    ports:
      - 9000:9000
    environment:
      - LOG_LEVEL=debug
         
  portainer_agent:
    container_name: portainer_agent
    image: portainer/agent:2.17.1
    restart: always
    networks:
      net:
        aliases: []
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - 9001:9001

  neintel-frontend:
    env_file:
    - .env
    container_name: neintel-frontend
    restart: unless-stopped
    networks:
      net:
        aliases: []
    build:
      context: ./frontend
      target: ${NODE_ENV}
      dockerfile: Dockerfile
      args:
        - NODE_ENV=${NODE_ENV}
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/node/app:delegated
      - /node/app/node_modules

  neintel-server:
    env_file:
    - .env
    container_name: neintel-server
    restart: unless-stopped
    networks:
      net:
        aliases: []
    build:
      context: "./server"
      dockerfile: Dockerfile
      target: ${NODE_ENV}
      args:
        - "NODE_ENV=${NODE_ENV}"
    ports:
      - 5000:5000
    volumes:
      - "./server:/node/app:delegated"
      - "/node/app/node_modules"
    environment:
      - PORT=5000
      - ZKILL_API=https://zkillboard.com/api/stats/characterID/
      - ZKILL_USERAGENT=${ZKILL_USERAGENT}
    depends_on:
      - mongo
  swag:
    image: lscr.io/linuxserver/swag:latest
    container_name: swag
    networks:
      net:
        aliases: []
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - URL=1au.info
      - VALIDATION=dns
      - SUBDOMAINS=wildcard #optional
      - DNSPLUGIN=cloudflare #optional
      - EMAIL=${EMAIL}
      - ONLY_SUBDOMAINS=false #optional
      - EXTRA_DOMAINS=1au.info,neintel.com
      - STAGING=false #optional
    volumes:
      - ./.swag:/config
    ports:
      - 443:443
      - 80:80 #optional
    restart: unless-stopped
  authelia:
    container_name: authelia
    image: docker.io/authelia/authelia:latest
    restart: unless-stopped
    networks:
      net:
        aliases: []
    expose:
      - 9091
    environment:
      AUTHELIA_JWT_SECRET_FILE: /secrets/JWT_SECRET
      AUTHELIA_SESSION_SECRET_FILE: /secrets/SESSION_SECRET
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: /secrets/STORAGE_ENCRYPTION_KEY
    volumes:
      - ./.authelia/config:/config
      - ./.authelia/secrets:/secrets

  mongo:
    env_file:
      - .env
    image: mongo:4.4
    container_name: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./.mongodb/data:/data/db
    ports:
      - 27017:27017
    networks:
      net:
        aliases: []
  mongo-express:
    env_file:
    - .env
    container_name: mongo-express
    image: mongo-express:latest
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_URL=${ME_CONFIG_MONGODB_URL}
    networks:
      net:
        aliases: []
    depends_on:
      - mongo
      
  redis:
    image: redis:7.0
    container_name: redis
    restart: always
    volumes:
      - ./.redis/conf:/usr/local/etc/redis
      - ./.redis:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    networks:
      net:
        aliases: []
        
networks:
  net:
    name: net